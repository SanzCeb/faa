import Clasificador
import numpy as np 

class ClasificadorNaiveBayes(Clasificador):

    entrenamiento = {}
  def __tabla_discreta (valores,diccionario):
      pass
  def __tabla_continua (valores,diccionario):
      pass

    
  def entrenamiento(self,datos_train,atributosDiscretos,diccionario):
      def __genera_tabla (valores, datoDiscreto):
          if datoDiscreto: 
              return __tabla_discreta(valores,diccionario)
          else
              return __tabla_continua(valores,diccionario)

      
      entrenamiento = list(map(__genera_tabla,datos_train,atributosDiscretos))
      datos_clase = datos_train.copy().transpose()[-1]
      
      num_datos_train = len(datos_clase)
      aprioris = [ datos_clase.count(value) for value in diccionario[:-1]]
      
    

  def clasifica(self,datostest,atributosDiscretos,diccionario):
    pass

    
  
