import numpy as np
from unittest import TestCase
import random


class Regla:
    clausulas = []
    conclusion = np.array([])

    def __init__(self,esquema=None):
        if esquema != None:
            self.clausulas = [ Clausula(longitud) for longitud in esquema[:-1] ]
            self.conclusion = esquema[-1]

    def se_cumple (self, dato):
        """Conjuncion de clausulas, se espera una lista de numpy array"""
        for (p, q) in zip(self.clausulas, dato):
            if not (p.se_cumple(q)):
                return False 
        return True
    def cruce (self, regla, punto):
        """Implementacion del cruce por en un punto. Se basa en la idea de que
        elegir una clausula es equivalente a establecer dos puntos de cruce"""
        vastago_1 = Regla()
        vastago_2 = Regla()

        vastago_1.clausulas = self.clausulas[:punto] + regla.clausulas[punto:]
        vastago_2.clausulas = regla.clausulas[:punto] + self.clausulas[punto:]
        vastago_1.conclusion = regla.conclusion
        vastago_2.conclusion = self.conclusion
        
        return vastago_1,vastago_2
    def mutar ( self ):
        """Invertimos un bit aleatoria de una clausula elegida de forma 
        tambien aleatoria"""
        i = entero_aleatorio(0, len(self.clausulas) - 1)
        clausulas[i].mutar()
